# -*- coding:utf-8 -*-

# Database select test. 
#
# This script is auto generated by ngrinder.
#
# @author ${user.userName}
from java.sql import DriverManager
from net.grinder.script.Grinder import grinder
from net.grinder.script import Test
from ${driverPath} import ${jdbcDriver}
 
test1 = Test(1, "Database select")
 
# Load the JDBC driver.
DriverManager.registerDriver(${jdbcDriver}())
 
def getConnection():
    return DriverManager.getConnection(
        "${url}", "${account}", "${password}")
 
def ensureClosed(object):
    try: object.close()
    except: pass
 
# One time initialisation that cleans out old data.
connection = getConnection()
# statement = connection.createStatement()
 
# You must ensure that the table and records already exist in the database.
# statement.execute("create table ngrinder_select_temp(thread integer, run integer)")
 
# ensureClosed(statement)
# ensureClosed(connection)
 
class TestRunner:
    def __call__(self):
        connection = None
        selectStatement = None
 
        try:
            selectStatement = connection.createStatement()
 
            # test1.record(selectStatement)
            selectStatement = test1.wrap(selectStatement)
            selectStatement.execute("select * from ngrinder_select_temp where thread=%d" %
                                   grinder.threadNumber)

        finally:
            ensureClosed(selectStatement)
            ensureClosed(connection)